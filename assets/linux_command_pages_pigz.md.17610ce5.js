import{_ as s,c as n,o as a,a as l}from"./app.f6b8b16b.js";const b=JSON.parse('{"title":"pigz","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u8865\u5145\u8BF4\u660E","slug":"\u8865\u5145\u8BF4\u660E","link":"#\u8865\u5145\u8BF4\u660E","children":[{"level":3,"title":"\u8BED\u6CD5","slug":"\u8BED\u6CD5","link":"#\u8BED\u6CD5","children":[]},{"level":3,"title":"\u53C2\u6570","slug":"\u53C2\u6570","link":"#\u53C2\u6570","children":[]},{"level":3,"title":"\u5B9E\u4F8B","slug":"\u5B9E\u4F8B","link":"#\u5B9E\u4F8B","children":[]}]}],"relativePath":"linux/command/pages/pigz.md","lastUpdated":1666509709000}'),e={name:"linux/command/pages/pigz.md"},p=l(`<h1 id="pigz" tabindex="-1">pigz <a class="header-anchor" href="#pigz" aria-hidden="true">#</a></h1><p>\u53EF\u4EE5\u7528\u6765\u89E3\u538B\u7F29\u6587\u4EF6\uFF0Cgzip\u7684\u5E76\u884C\u5B9E\u73B0\u5347\u7EA7\u7248</p><h2 id="\u8865\u5145\u8BF4\u660E" tabindex="-1">\u8865\u5145\u8BF4\u660E <a class="header-anchor" href="#\u8865\u5145\u8BF4\u660E" aria-hidden="true">#</a></h2><p><strong>pigz\u547D\u4EE4</strong>\u53EF\u4EE5\u7528\u6765\u89E3\u538B\u7F29\u6587\u4EF6\uFF0C\u6700\u91CD\u8981\u7684\u662F\u652F\u6301\u591A\u7EBF\u7A0B\u5E76\u884C\u5904\u7406\uFF0C\u89E3\u538B\u7F29\u6BD4gzip\u5FEB\u3002\u4E3B\u9875: <a href="http://zlib.net/pigz/" target="_blank" rel="noreferrer">http://zlib.net/pigz/</a></p><h3 id="\u8BED\u6CD5" tabindex="-1">\u8BED\u6CD5 <a class="header-anchor" href="#\u8BED\u6CD5" aria-hidden="true">#</a></h3><div class="language-shell line-numbers-mode"><button class="copy"></button><span class="lang">shell</span><pre><code><span class="line"><span style="color:#A6ACCD;">pigz </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-c</span><span style="color:#A6ACCD;">dfhikKlLmMnNqrRtz0..9,11 </span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-b</span><span style="color:#A6ACCD;"> blocksize </span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-p</span><span style="color:#A6ACCD;"> threads </span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-S</span><span style="color:#A6ACCD;"> suffix </span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;"> name ...  </span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">unpigz </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-c</span><span style="color:#A6ACCD;">fhikKlLmMnNqrRtz </span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-b</span><span style="color:#A6ACCD;"> blocksize </span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-p</span><span style="color:#A6ACCD;"> threads </span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-S</span><span style="color:#A6ACCD;"> suffix </span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;"> name ...  </span><span style="color:#89DDFF;">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="\u53C2\u6570" tabindex="-1">\u53C2\u6570 <a class="header-anchor" href="#\u53C2\u6570" aria-hidden="true">#</a></h3><div class="language-shell line-numbers-mode"><button class="copy"></button><span class="lang">shell</span><pre><code><span class="line"><span style="color:#A6ACCD;">-0 to -9, -11       </span><span style="color:#676E95;"># Compression level (level 11, zopfli, is much slower)</span></span>
<span class="line"><span style="color:#A6ACCD;">--fast, --best      </span><span style="color:#676E95;"># Compression levels 1 and 9 respectively</span></span>
<span class="line"><span style="color:#A6ACCD;">-b, --blocksize mmm </span><span style="color:#676E95;"># Set compression block size to mmmK (default 128K)</span></span>
<span class="line"><span style="color:#A6ACCD;">-c, --stdout        </span><span style="color:#676E95;"># Write all processed output to stdout (won&#39;t delete)</span></span>
<span class="line"><span style="color:#A6ACCD;">-d, --decompress    </span><span style="color:#676E95;"># Decompress the compressed input</span></span>
<span class="line"><span style="color:#A6ACCD;">-f, --force         </span><span style="color:#676E95;"># Force overwrite, compress .gz, links, and to terminal</span></span>
<span class="line"><span style="color:#A6ACCD;">-F  --first         </span><span style="color:#676E95;"># Do iterations first, before block split for -11</span></span>
<span class="line"><span style="color:#A6ACCD;">-h, --help          </span><span style="color:#676E95;"># Display a help screen and quit</span></span>
<span class="line"><span style="color:#A6ACCD;">-i, --independent   </span><span style="color:#676E95;"># Compress blocks independently for damage recovery</span></span>
<span class="line"><span style="color:#A6ACCD;">-I, --iterations n  </span><span style="color:#676E95;"># Number of iterations for -11 optimization</span></span>
<span class="line"><span style="color:#A6ACCD;">-J, --maxsplits n   </span><span style="color:#676E95;"># Maximum number of split blocks for -11</span></span>
<span class="line"><span style="color:#A6ACCD;">-k, --keep          </span><span style="color:#676E95;"># Do not delete original file after processing</span></span>
<span class="line"><span style="color:#A6ACCD;">-K, --zip           </span><span style="color:#676E95;"># Compress to PKWare zip (.zip) single entry format</span></span>
<span class="line"><span style="color:#A6ACCD;">-l, --list          </span><span style="color:#676E95;"># List the contents of the compressed input</span></span>
<span class="line"><span style="color:#A6ACCD;">-L, --license       </span><span style="color:#676E95;"># Display the pigz license and quit</span></span>
<span class="line"><span style="color:#A6ACCD;">-m, --no-time       </span><span style="color:#676E95;"># Do not store or restore mod time</span></span>
<span class="line"><span style="color:#A6ACCD;">-M, --time          </span><span style="color:#676E95;"># Store or restore mod time</span></span>
<span class="line"><span style="color:#A6ACCD;">-n, --no-name       </span><span style="color:#676E95;"># Do not store or restore file name or mod time</span></span>
<span class="line"><span style="color:#A6ACCD;">-N, --name          </span><span style="color:#676E95;"># Store or restore file name and mod time</span></span>
<span class="line"><span style="color:#A6ACCD;">-O  --oneblock      </span><span style="color:#676E95;"># Do not split into smaller blocks for -11</span></span>
<span class="line"><span style="color:#A6ACCD;">-p, --processes n   </span><span style="color:#676E95;"># Allow up to n compression threads (default is the number of online processors, or 8 if unknown)</span></span>
<span class="line"><span style="color:#A6ACCD;">-q, --quiet         </span><span style="color:#676E95;"># Print no messages, even on error</span></span>
<span class="line"><span style="color:#A6ACCD;">-r, --recursive     </span><span style="color:#676E95;"># Process the contents of all subdirectories</span></span>
<span class="line"><span style="color:#A6ACCD;">-R, --rsyncable     </span><span style="color:#676E95;"># Input-determined block locations for rsync</span></span>
<span class="line"><span style="color:#A6ACCD;">-S, --suffix .sss   </span><span style="color:#676E95;"># Use suffix .sss instead of .gz (for compression)</span></span>
<span class="line"><span style="color:#A6ACCD;">-t, --test          </span><span style="color:#676E95;"># Test the integrity of the compressed input</span></span>
<span class="line"><span style="color:#A6ACCD;">-v, --verbose       </span><span style="color:#676E95;"># Provide more verbose output</span></span>
<span class="line"><span style="color:#A6ACCD;">-V  --version       </span><span style="color:#676E95;"># Show the version of pigz</span></span>
<span class="line"><span style="color:#A6ACCD;">-Y  --synchronous   </span><span style="color:#676E95;"># Force output file write to permanent storage</span></span>
<span class="line"><span style="color:#A6ACCD;">-z, --zlib          </span><span style="color:#676E95;"># Compress to zlib (.zz) instead of gzip format</span></span>
<span class="line"><span style="color:#A6ACCD;">--                  </span><span style="color:#676E95;"># All arguments after &quot;--&quot; are treated as files</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><h3 id="\u5B9E\u4F8B" tabindex="-1">\u5B9E\u4F8B <a class="header-anchor" href="#\u5B9E\u4F8B" aria-hidden="true">#</a></h3><p>\u53EF\u4EE5\u7ED3\u5408<code>tar</code>\u4F7F\u7528, \u538B\u7F29\u547D\u4EE4</p><div class="language-shell line-numbers-mode"><button class="copy"></button><span class="lang">shell</span><pre><code><span class="line"><span style="color:#A6ACCD;">tar -cvf - dir1 dir2 dir3 </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> pigz -p 8 </span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> output.tgz</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><p>\u89E3\u538B\u547D\u4EE4</p><div class="language-shell line-numbers-mode"><button class="copy"></button><span class="lang">shell</span><pre><code><span class="line"><span style="color:#A6ACCD;">pigz -p 8 -d output.tgz</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><p>\u5982\u679C\u662Fgzip\u683C\u5F0F\uFF0C\u4E5F\u652F\u6301\u7528tar\u89E3\u538B</p><div class="language-shell line-numbers-mode"><button class="copy"></button><span class="lang">shell</span><pre><code><span class="line"><span style="color:#A6ACCD;">tar -xzvf output.tgz</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div>`,15),o=[p];function r(t,c,i,y,C,D){return a(),n("div",null,o)}const d=s(e,[["render",r]]);export{b as __pageData,d as default};
